/* styles/globals.css - Global stylesheet for the entire application.
 * Imported in: app/layout.tsx via '../styles/globals.css'.
 * Purpose: Defines resets, color tokens, typography, sections, animations, and component-specific styles.
 * Note: This file is loaded globally; avoid component-scoped styles here—use inline or separate files for those.
 */

/* ------------------------------------ */
/* Reset and Base Styles Section */
/* ------------------------------------ */
/* Resets default browser margins/padding for consistent layout across devices.
 * Ensures box-sizing includes borders/padding in element dimensions.
 * Applies base colors, fonts, and overflow behaviors to html/body.
 * References: Used site-wide; prevents issues in components like Header.tsx and smooth-content scrolling.
 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  overflow-x: hidden;
  color: var(--text);
  background-color: var(--background);
  font-family: var(
    --font-michroma
  ); /* Apply Michroma for futuristic/simple look */
  overscroll-behavior-x: none; /* Prevent horizontal overscroll triggering back/forward */
}

/* ------------------------------------ */
/* Color Tokens Section */
/* ------------------------------------ */
/* Defines root variables for consistent theming (e.g., backgrounds, accents, glows).
 * References: Used in typography, glow effects, and components like Project.tsx and Contact.tsx.
 * Boosted opacities for visibility; purple palette aligns with space theme.
 */
:root {
  --background: #000000;
  --primary-purple: #6a1b9a;
  --accent: #9c27b0;
  --subtle-glow: rgba(208, 92, 227, 0.5); /* Boosted opacity */
  --text: #ede7f6;
  --glow-purple: #8e25bf; /* Matching purple for text glow */
}

/* ------------------------------------ */
/* Typography Section */
/* ------------------------------------ */
/* Base styles for headings and paragraphs, ensuring consistent color and sizing.
 * References: Applied to h1/h2/p in components like Hero.tsx, About.tsx, Project.tsx.
 * Montserrat for paragraphs improves readability; bold weights for emphasis in futuristic theme.
 */
h1,
h2,
p {
  color: var(--text);
}

h1 {
  font-size: 4rem; /* Increased size for bolder presence */
  font-weight: bold; /* Bold for Michroma */
  color: #ffffff;
}
h2 {
  font-size: 2rem;
  font-weight: bold; /* Bold for headings */
  color: #ffffff;
}
p {
  font-size: 1.2rem;
  line-height: 1.6;
  margin-bottom: 1.5rem;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  font-family: var(--font-montserrat); /* Added for better readability */
}

/* ------------------------------------ */
/* Sections and Reveals Section */
/* ------------------------------------ */
/* Styles for .section elements, handling layout, centering, and reveal animations.
 * References: Used in components like Hero.tsx, About.tsx, Project.tsx, Contact.tsx, and now Blog page (app/blog/page.tsx).
 * Initial opacity/transform for staggered reveals; transition for smooth entry.
 * Hero-specific tweaks to offset header padding and ensure full viewport height.
 */
.section {
  position: relative;
  z-index: 1;
  padding: 4rem 2rem;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  opacity: 0; /* Init hidden */
  transform: translateY(50px); /* Stagger from below */
  transition:
    opacity 1s ease,
    transform 1s ease; /* CSS transition for reveal */
}

.section.visible {
  opacity: 1;
  transform: translateY(0);
}

.section#hero {
  opacity: 0;
  transform: translateY(0);
  margin-top: -80px; /* Pull hero up to offset padding */
  min-height: 100vh; /* Standard viewport height to maintain centering */
}

/* ------------------------------------ */
/* Glow Effect Section */
/* ------------------------------------ */
/* Defines the glowing text effect with outline and pulsation.
 * References: Applied to h1/h2 in Hero.tsx, Project.tsx, Contact.tsx, and Blog header.
 * Uses text-shadow for multi-browser compatibility; animation for subtle pulse.
 * WebKit-specific stroke for sharper outlines in Chrome/Safari.
 */
.glow {
  color: #ffffff; /* Darker purple fill for consistency */
  -webkit-text-stroke: 0.01px rgb(119, 0, 255); /* Thicker black outline for noticeability; WebKit/Chrome/Safari */
  text-shadow:
    0 0 10px var(--glow-purple),
    0 0 20px var(--glow-purple),
    0 0 30px var(--glow-purple),
    -1px -1px 0 black,
    1px -1px 0 black,
    -1px 1px 0 black,
    1px 1px 0 black,
    -2px -2px 0 black,
    2px -2px 0 black,
    -2px 2px 0 black,
    2px 2px 0 black; /* Fallback outline simulation for other browsers */
  animation: pulsate-glow 2s ease-in-out infinite alternate; /* Pulsating effect */
}

@keyframes pulsate-glow {
  0% {
    text-shadow:
      0 0 5px var(--glow-purple),
      0 0 10px var(--glow-purple),
      0 0 15px var(--glow-purple);
  }
  100% {
    text-shadow:
      0 0 15px var(--glow-purple),
      0 0 30px var(--glow-purple),
      0 0 45px var(--glow-purple);
  }
}

/* ------------------------------------ */
/* Accessibility and Media Queries Section */
/* ------------------------------------ */
/* Enhances accessibility (button focus) and handles reduced motion/motion preferences.
 * Responsive adjustments for smaller screens.
 * References: Global; affects all buttons (e.g., in Contact.tsx) and sections.
 */
button:focus {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
  .section {
    opacity: 1 !important;
    transform: none !important;
  }
  .glow {
    animation: none !important;
  } /* Disable pulsate for reduced motion */
}

@media (max-width: 768px) {
  h1 {
    font-size: 3rem;
  } /* Slightly smaller on mobile */
  h2 {
    font-size: 1.5rem;
  }
  .section {
    padding: 2rem 1rem;
  }
}

/* ------------------------------------ */
/* Aura Background Section */
/* ------------------------------------ */
/* Creates fixed, blurred gradient auras for cosmic background effect.
 * References: Defined in app/layout.tsx as .aura-layer with child .aura divs.
 * Fixed position ensures it stays behind content; pointer-events none to avoid interaction.
 */
.aura-layer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  pointer-events: none;
  z-index: -1;
}

.aura {
  position: absolute;
  width: 60vw;
  height: 60vw;
  border-radius: 50%;
  filter: blur(100px);
  opacity: 0.3;
}

.aura.light-blue {
  background: #a29bfe;
  top: -30%;
  left: -30%;
}

.aura.dark-blue {
  background: #6a1b9a;
  top: -10%;
  right: -30%;
}

.aura.deep-purple {
  background: #4a148c;
  bottom: -30%;
  left: 20%;
}

.aura.pink {
  background: #ab47bc;
  bottom: -20%;
  right: -10%;
}

/* ------------------------------------ */
/* Header Styles Section */
/* ------------------------------------ */
/* Layout and navigation for the fixed header.
 * References: Used in components/Header.tsx for .header-layout, .navbar-nav, etc.
 * Fixed positioning with transparency transition on scroll; mobile hamburger for responsive nav.
 */
.header-layout {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 4rem; /* Increased horizontal padding for less "boxed" feel */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 50;
  background: transparent;
  transition: background 0.3s ease;
  pointer-events: auto;
}

.header-layout.scrolled {
  background: rgba(0, 0, 0, 0.8);
}

.navbar-nav {
  display: flex;
  gap: 3rem; /* Increased gap for more spread out nav links */
}

.nav-link {
  color: var(--text);
  text-decoration: none;
  font-weight: bold;
  text-transform: uppercase;
  transition: color 0.3s ease;
}

.nav-link:hover {
  color: var(--accent);
}

/* Content padding to avoid header overlap */
#smooth-content {
  padding-top: 80px; /* Adjust based on header height; assumes ~60px header + margin */
}

/* Hamburger styles (hidden on desktop) */
.hamburger {
  display: none; /* Hide on desktop by default */
  cursor: pointer;
  font-size: 1.5rem;
  color: var(--text);
}

/* Mobile header styles */
@media (max-width: 768px) {
  .header-layout {
    padding: 1rem 2rem; /* Reduced padding for mobile */
  }

  .navbar-nav {
    display: none; /* Hide nav links by default on mobile */
    flex-direction: column;
    gap: 1rem;
    position: absolute;
    top: 100%;
    right: 0;
    background: rgba(0, 0, 0, 0.9);
    padding: 1rem;
    border-radius: 0 0 0 10px;
  }

  .navbar-nav.open {
    display: flex; /* Show when hamburger clicked */
  }

  .hamburger {
    display: block; /* Show hamburger on mobile */
  }
}

/* ------------------------------------ */
/* Project Container Section */
/* ------------------------------------ */
/* Styles for project cards, including layout, gradients, borders, and responsive stacking.
 * References: Used in components/Project.tsx for .project-container and children.
 * Translucent gradient bg with purple border; flex for internal row/column layout.
 * Media query for mobile stacking.
 */
.project-container {
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.205),
    rgba(132, 0, 255, 0.402)
  ); /* White translucent background with subtle fade; more see-through */
  padding: 3rem; /* Slightly reduced for less "stretched" feel vertically */
  border-radius: 15px; /* Rounded corners */
  width: 90%; /* Expand to fill page on desktop */
  max-width: none; /* Remove fixed max for full space use */
  margin: 0 auto; /* Center the box */
  text-align: center; /* Keep centered text */
  border: 5px solid #8e0ae0; /* Thicker frame in main purple color for noticeability */
  box-shadow:
    0 0 0 3px black,
    /* Outside black outline—adjust 3px for thickness */ inset 0 0 0 3px black; /* Inside black outline—adjust 3px for thickness */
  display: flex;
  flex-direction: column; /* Vertical stacking for header/body/footer */
  height: 100%; /* Fill section height if needed */
}
.project-header {
  flex: none; /* Fixed size */
  margin-bottom: 1rem;
}
.project-body {
  flex: 1; /* Main content row */
  display: flex;
  flex-direction: row; /* Horizontal columns */
  gap: 2rem; /* Space between images and text */
}
.project-images {
  flex: 1; /* Left 1/3 */
  display: flex;
  flex-direction: column; /* Stack if multiple, but single now */
  justify-content: center; /* Center vertically in column */
  align-items: center; /* Center horizontally in column */
  gap: 1rem; /* Space if multiple images */
  max-height: none; /* UPDATED: Remove cap to fit image + video without clipping */
  overflow: hidden; /* Hide overflow if image exceeds cap */
}
.project-image {
  max-width: 100%;
  max-height: 100%; /* Fill capped column without exceeding */
  object-fit: contain; /* Maintain aspect, no crop */
  border-radius: 10px; /* Optional rounded images */
}
/* NEW: Video wrapper for 16:9 aspect ratio */
.video-wrapper {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 */
  height: 0;
  overflow: hidden;
  width: 100%; /* Full width */
}
/* NEW: Styles for embedded YouTube iframe */
.project-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 10px; /* Match image rounding */
  border: none; /* Clean look */
}
.project-text {
  flex: 2; /* Right 2/3 */
  display: flex; /* Enable flex for vertical centering */
  flex-direction: column; /* Column for text stacking */
  justify-content: center; /* Center text vertically on center line */
  text-align: left; /* Left-align for PC/web screens */
}
/* ------------------------------------ */
/* Project Footer Tweaks (for no pipes) */
/* ------------------------------------ */
.project-footer {
  flex: none; /* Fixed size */
  display: flex;
  justify-content: center;
  gap: 1rem; /* Increased gap between buttons (no pipes) for cleaner look */
  margin-top: 1rem;
  flex-wrap: wrap; /* Wrap if too many links */
}
.project-footer a {
  color: #ffffff !important; /* NEW: Explicit white override for project links (in case of old styles) */
}
@media (max-width: 768px) {
  .project-container {
    width: 100%; /* Full-width on mobile, no expansion needed */
    padding: 2rem; /* Less padding for small screens */
  }
  .project-body {
    flex-direction: column; /* Stack columns vertically on mobile */
  }
  .project-images {
    max-height: none; /* No cap on mobile to avoid clipping */
  }
  .project-text {
    text-align: center; /* Center-align text on mobile */
  }
}

/* ------------------------------------ */
/* Contact Form Section */
/* ------------------------------------ */
/* Styles for the contact form container, titles, fieldsets, inputs, and button.
 * References: Used in components/Contact.tsx for .contact-container, #contact h3/h4, fieldsets, .input-purple, .submit-button.
 * Matched to template layout (stacked, square edges); purple theming with translucent bg.
 * Includes autofill/focus overrides to prevent white backgrounds; media for mobile width.
 */
/* Contact Container (matched to template's #contact) */
.contact-container {
  max-width: 600px; /* Extended width from 400px to 600px for less "skinny" feel */
  width: 100%;
  margin: 3rem auto 0; /* Added 3rem top margin for padding between Twitter link and form */
  position: relative;
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.205),
    rgba(132, 0, 255, 0.402)
  ); /* UPDATED: Match project/button gradient direction (gray top to purple bottom) */
  padding: 25px;
  box-shadow:
    0 0 20px 0 rgba(0, 0, 0, 0.2),
    0 5px 5px 0 rgba(0, 0, 0, 0.24); /* Exact match to template */
  border: 2px solid #6a1b9a; /* Kept existing border for coloring */
  /* Removed border-radius for square look */
}

/* Form Titles (matched to template) */
#contact h3 {
  display: block;
  font-size: 30px;
  font-weight: 300;
  margin-bottom: 10px;
  color: var(--text);
}

#contact h4 {
  margin: 5px 0 15px;
  display: block;
  font-size: 13px;
  font-weight: 400;
  color: var(--text);
}

/* Fieldsets (matched to template) */
fieldset {
  border: medium none !important;
  margin: 0 0 10px;
  min-width: 100%;
  padding: 0;
  width: 100%;
}

/* Inputs and Textarea (matched to template, kept purple coloring) */
.input-purple {
  width: 100%;
  border: 1px solid #6a1b9a; /* Kept purple border */
  background: rgba(132, 0, 255, 0.402); /* Kept translucent purple bg */
  margin: 0 0 5px;
  padding: 10px;
  font: 400 12px/16px var(--font-montserrat); /* Used our font */
  color: var(--text); /* Light text for visibility */
  /* Removed rounded for square look */
}

.input-purple:focus {
  background: rgba(
    132,
    0,
    255,
    0.402
  ); /* Explicitly keep same bg on focus to prevent white override */
  outline: none; /* Remove default focus outline if desired, or customize */
}

.input-purple:not(:placeholder-shown) {
  background: rgba(
    132,
    0,
    255,
    0.3
  ); /* Slightly reduced opacity when text entered (placeholder hidden) */
}

.input-purple:hover {
  border: 1px solid #9c27b0; /* Hover to accent purple (matched template hover logic) */
  transition: border-color 0.3s ease-in-out;
}

/* Autofill overrides (for Chrome/WebKit browsers turning it white/yellow) */
.input-purple:-webkit-autofill,
.input-purple:-webkit-autofill:hover,
.input-purple:-webkit-autofill:focus {
  background-color: rgba(132, 0, 255, 0.402) !important; /* Match base bg */
  -webkit-box-shadow: 0 0 0 1000px rgba(132, 0, 255, 0.402) inset !important; /* Trick to force bg */
  -webkit-text-fill-color: var(--text) !important; /* Keep text color */
  border: 1px solid #6a1b9a !important; /* Keep border */
}

/* For filled autofill (combine with reduced opacity if text is present) */
.input-purple:-webkit-autofill:not(:placeholder-shown) {
  -webkit-box-shadow: 0 0 0 1000px rgba(132, 0, 255, 0.3) inset !important;
}

textarea.input-purple {
  height: 100px;
  max-width: 100%;
  resize: none;
}

textarea.input-purple:not(:placeholder-shown) {
  background: rgba(132, 0, 255, 0.3); /* Apply to textarea as well */
}

textarea.input-purple:focus {
  background: rgba(132, 0, 255, 0.402);
}

textarea.input-purple:-webkit-autofill,
textarea.input-purple:-webkit-autofill:hover,
textarea.input-purple:-webkit-autofill:focus {
  background-color: rgba(132, 0, 255, 0.402) !important;
  -webkit-box-shadow: 0 0 0 1000px rgba(132, 0, 255, 0.402) inset !important;
  -webkit-text-fill-color: var(--text) !important;
  border: 1px solid #6a1b9a !important;
}

textarea.input-purple:-webkit-autofill:not(:placeholder-shown) {
  -webkit-box-shadow: 0 0 0 1000px rgba(132, 0, 255, 0.3) inset !important;
}

/* ------------------------------------ */
/* Button Styles (Minor Cleanup) */
/* ------------------------------------ */
.submit-button {
  cursor: pointer;
  width: auto; /* Auto-width for flexibility */
  border: 3px solid #8e0ae0;
  border-radius: 15px;
  box-shadow:
    0 0 0 2px black,
    inset 0 0 0 2px black;
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.205),
    rgba(132, 0, 255, 0.402)
  );
  color: #ffffff;
  margin: 0;
  padding: 10px 20px;
  font-size: 15px;
  text-align: center;
  transition:
    background 0.3s ease-in-out,
    transform 0.3s ease-in-out;
  display: inline-block;
  text-decoration: none;
}
.submit-button:hover {
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.305),
    rgba(132, 0, 255, 0.502)
  );
  transform: scale(1.03);
}

/* Remove the grid media query to keep stacked layout */
@media (max-width: 768px) {
  .contact-container {
    padding: 25px; /* Keep same padding */
    max-width: 90%; /* Slightly wider on mobile for usability */
  }
}

/* ------------------------------------ */
/* Blog-Specific Styles Section */
/* ------------------------------------ */
/* Enhancements for blog list and single post pages:
 * - Blog List (ClientBlog.tsx): Ensure each post's h2 header is centered (already via .project-container text-align: center; no change needed, but reinforced here for clarity).
 * - Single Post (ClientPost.tsx): 
 *   - Wrap content in a new .post-container (similar to .project-container for consistency: translucent gradient bg, purple border, black outlines).
 *   - Header (h1): Centered with glow, added padding-bottom: 2rem for clear separation.
 *   - Content (p): Left-aligned for readability, with max-width: 800px and auto margins to center the block on desktop (prevents full side-to-side reading). On mobile, it naturally fills the space.
 *   - Overall: Formatted as a clean text block with line-height and margins for nice flow.
 * - Media Query: On mobile (max-width: 768px), keep full-width for better touch UX, but maintain left-align.
 * - Button: Positioned below content, centered or left-aligned to match text flow.
 */
/* Reuse .project-container for blog list posts (headers already centered via text-align: center) */

/* New .post-container for single post consistency */
.post-container {
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.205),
    rgba(132, 0, 255, 0.402)
  ); /* Match project gradient */
  padding: 3rem; /* Internal padding */
  border-radius: 15px;
  width: 90%; /* Expand on desktop */
  max-width: 1200px; /* Cap for wide screens */
  margin: 0 auto; /* Center */
  text-align: center; /* Center header */
  border: 5px solid #8e0ae0; /* Match project border */
  box-shadow:
    0 0 0 3px black,
    inset 0 0 0 3px black;
}

/* Single post header */
.post-container h1 {
  text-align: center; /* Explicit center */
  padding-bottom: 2rem; /* Separation below header */
  margin-bottom: 2rem; /* Extra space */
  border-bottom: 1px solid rgba(255, 255, 255, 0.2); /* Subtle divider for clarity (optional; remove if too much) */
}

/* Single post content */
.post-container p {
  text-align: left; /* Left-aligned for reading */
  max-width: 800px; /* Limit width on desktop for comfortable line length */
  margin: 0 auto 1.5rem; /* Center the block, add bottom margin */
  line-height: 1.6; /* Good readability */
  font-size: 1.2rem;
  font-family: var(--font-montserrat);
}

/* Button positioning in single post */
.post-container .submit-button {
  display: block; /* Block for centering */
  margin: 2rem auto 0; /* Center below content with top margin */
  width: auto; /* Not full-width */
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .post-container {
    width: 100%; /* Full-width on mobile */
    padding: 2rem;
  }
  .post-container p {
    max-width: none; /* Fill space on mobile */
  }
}

/* ------------------------------------ */
/* Button Styles Section */
/* ------------------------------------ */
/* Updated styles for .submit-button to closely match project-container scheme: 
 * - Gradient bg: Same gray-to-purple translucent linear-gradient as projects.
 * - Border: 5px solid #8e0ae0 to match project purple (brighter for scheme alignment).
 * - Outlines: Same 3px black inner/outer shadows.
 * - Text: #ffffff white as per user update for better visibility.
 * - Rounded: 15px to echo project-container's 15px (softer match).
 * - Width: Auto by default for non-form buttons (e.g., blog links); full-width override in contact form via class if needed.
 * - Hover: Boost gradient opacity slightly for feedback; subtle scale for interactivity (now more graceful with longer duration, ease-in-out, and reduced scale).
 * - References: Applied to Contact.tsx (submit), ClientBlog.tsx ("Click to Read"), ClientPost.tsx ("Back to Blog").
 */
.submit-button {
  cursor: pointer;
  width: auto; /* Auto-width for flexibility */
  border: 3px solid #8e0ae0;
  border-radius: 15px;
  box-shadow:
    0 0 0 2px black,
    inset 0 0 0 2px black;
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.205),
    rgba(132, 0, 255, 0.402)
  );
  color: #ffffff !important; /* UPDATED: !important to override any inherited accents (e.g., from old project-footer a) */
  margin: 0;
  padding: 10px 20px;
  font-size: 15px;
  text-align: center;
  transition:
    background 0.3s ease-in-out,
    transform 0.3s ease-in-out;
  display: inline-block;
  text-decoration: none;
  font-family: var(
    --font-michroma
  ); /* NEW: Explicit Michroma for consistent futuristic button font */
  font-weight: bold; /* NEW: Bold for emphasis, matching headings */
  text-transform: uppercase; /* NEW: Uppercase for button-like feel */
}
.submit-button:hover {
  background: linear-gradient(
    to bottom,
    rgba(63, 62, 62, 0.305),
    rgba(132, 0, 255, 0.502)
  );
  transform: scale(1.03);
}

/* Form-specific override */
.contact-container .submit-button {
  width: 100%;
}

/* ------------------------------------ */
/* Contact Layout for side-by-side on desktop */
/* ------------------------------------ */
.contact-layout {
  display: flex;
  flex-direction: column; /* Default stack for mobile */
  gap: 2rem; /* Space between info and form */
  width: 100%;
  max-width: 1200px; /* Cap for wide screens */
  margin: 0 auto; /* Center */
}

.contact-info {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center text/links */
  text-align: center;
  gap: 1rem; /* NEW: Space between buttons for cleaner layout */
}

.contact-info a {
  margin-top: 0; /* Remove old margin; use gap instead */
  width: 100%; /* NEW: Stretch buttons full-width in container */
  max-width: 300px; /* NEW: Cap max-width for consistency; adjust as needed */
}

.contact-container {
  max-width: 600px; /* Keep form width */
  margin: 0 auto; /* Center on mobile */
}

@media (min-width: 769px) {
  .contact-layout {
    flex-direction: row; /* Side-by-side on desktop */
    justify-content: space-between; /* Space out */
    align-items: flex-start; /* Top-align */
    gap: 4rem; /* Increased gap for cleaner desktop spacing */
  }

  .contact-info {
    flex: 1; /* Equal space */
    align-items: flex-start; /* Left-align on desktop */
    text-align: left;
  }

  .contact-container {
    flex: 1; /* Equal space */
    margin: 0; /* No auto margin on desktop */
  }

  .contact-info a {
    max-width: none; /* No cap on desktop; stretch to container */
  }
}

@media (max-width: 768px) {
  .blog-posts-container {
    grid-template-columns: 1fr; /* Stack on mobile */
  }
}

/* In styles/globals.css - Add/Update for blog header padding and top closeness */
.section#blog {
  padding-top: 2rem; /* Reduced top padding to bring closer to screen top (from 4rem) */
}

.section#blog h1 {
  margin-bottom: 1rem; /* Padding between header and subtext */
}

/* ------------------------------------ */
/* Section and Header Tweaks for Cleaner Layout */
/* ------------------------------------ */
.section#contact h2 {
  margin-bottom: 2rem; /* NEW: Add padding/margin under 'Get in Contact' header */
}

.section#contact p {
  margin-bottom: 1rem; /* Ensure consistent paragraph spacing */
}

/* Update .blog-posts-container for desktop 3 per row */
.blog-posts-container {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(300px, 1fr)
  ); /* Mobile: 1-2 dynamic */
  gap: 2rem;
  width: 100%;
  max-width: 1200px;
  margin: 2rem auto;
}

@media (min-width: 769px) {
  .blog-posts-container {
    grid-template-columns: repeat(3, 1fr); /* Desktop: 3 per row */
  }
}

/* Pagination buttons (new - center at bottom) */
.pagination {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.pagination .submit-button {
  width: auto; /* Button style from globals */
}

/* ------------------------------------ */
/* Preloader Specific Styles */
/* ------------------------------------ */
.preloader-image {
  width: 150px; /* Adjust size to taste; responsive */
  height: auto;
  animation: image-pulsate-glow 2s ease-in-out infinite alternate; /* NEW: Image-specific pulsate */
}
@keyframes image-pulsate-glow {
  0% {
    filter: drop-shadow(0 0 5px var(--glow-purple))
      drop-shadow(0 0 10px var(--glow-purple)); /* Smaller glow, respects alpha */
  }
  100% {
    filter: drop-shadow(0 0 15px var(--glow-purple))
      drop-shadow(0 0 30px var(--glow-purple)); /* Larger glow */
  }
}
/* ------------------------------------ */
/* Hero and Preloader Text Tweaks */
/* ------------------------------------ */
.section#hero h1 {
  white-space: nowrap; /* Keep one line where possible */
}
#preloader div {
  /* Target preloader text */
  text-align: center; /* Explicit center */
}
/* Mobile Media Query (shrink text to fit) */
@media (max-width: 768px) {
  .section#hero h1 {
    font-size: calc(
      2rem + 2vw
    ); /* UPDATED: Dynamic shrink (min 2rem, scales with view) */
    white-space: normal; /* Allow wrap if too long to prevent off-screen */
    max-width: 100vw; /* Cap to screen width */
  }
  .preloader-image {
    width: 100px; /* Smaller on mobile */
  }
}
